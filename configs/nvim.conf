" Preferences
set number
set relativenumber
set ignorecase
set wildignorecase
set fileignorecase
set showmatch
set clipboard=unnamedplus
set hlsearch
set incsearch
set wildmenu
set wildmode=longest,list
set mouse=a
syntax on
set nowrap
set title
set completeopt=menuone,noinsert,noselect
set pumheight=10
set cmdheight=2
set background=dark
set scrolloff=250
set softtabstop=4
set shiftwidth=4
set noexpandtab

"Keybindings
inoremap jj <Esc>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
nnoremap <C-a> :call ToggleVExplorer()<CR>
nnoremap <TAB> :bnext<CR>
nnoremap <S-TAB> :bprevious<CR>
nnoremap <A-TAB> :bd<CR>
nnoremap <C-s> :w<CR>
nnoremap <C-q> :q<CR>
nnoremap <F3> :noh<CR>
nnoremap <C-e> <cmd>Telescope find_files<cr>
nnoremap <C-F> <cmd>Telescope live_grep<cr>

" Plugins
call plug#begin('~/.vim/plugged')
    " Fuzzy finder
    Plug 'nvim-lua/plenary.nvim'
    Plug 'nvim-telescope/telescope.nvim'
call plug#end()

" Functions
function! ToggleVExplorer()
  if exists("t:expl_buf_num")
      let expl_win_num = bufwinnr(t:expl_buf_num)
      if expl_win_num != -1
          let cur_win_nr = winnr()
          exec expl_win_num . 'wincmd w'
          close
          exec cur_win_nr . 'wincmd w'
          unlet t:expl_buf_num
      else
          unlet t:expl_buf_num
      endif
  else
      exec '1wincmd w'
      Vexplore
      let t:expl_buf_num = bufnr("%")
  endif
endfunction
